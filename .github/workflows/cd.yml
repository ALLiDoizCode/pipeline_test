name: CD

on:
    pull_request:
        types: [closed]
        branches:
            - main
            - master
            - staging
            - development

jobs:
    check-branch:
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true
        steps:

          - uses: actions/checkout@v4
          - uses: actions/setup-node@v4
            with:
              node-version: 20
              cache: 'npm'

          - name: Cache mops packages
            uses: actions/cache@v4
            with:
              key: mops-packages-${{ hashFiles('mops.toml') }}
              restore-keys: |
                mops-packages-${{ hashFiles('mops.toml') }}
                mops-packages-
              path: |
                ~/.cache/mops    

          - name: Install dfx
            uses: dfinity/setup-dfx@main
  
          - name: Confirm successful installation
            run: dfx --version
          
          - name: Installign dfx cache
            run: dfx cache install

          - name: Install mops
            run: npm i -g ic-mops@latest

          - name: Install mops packages
            run: mops install

          - name: Deploy to development
            if: github.base_ref == 'development'
            run: |
                echo ${{ secrets.DEVELOPMENT }} | base64 --decode > development.pem
                dfx identity import --storage-mode=plaintext development development.pem
                dfx identity use development
                dfx deploy --network development -y

          - name: Deploy to staging
            if: github.base_ref == 'staging'
            run: |
                if [[ "${{ github.head_ref }}" != "development" ]]; then
                  echo "Only changes from the development branch can be merged into staging."
                  exit 1
                else
                  echo ${{ secrets.STAGING }} | base64 --decode > staging.pem
                  dfx identity import --storage-mode=plaintext staging staging.pem
                  dfx identity use staging
                  dfx deploy --network staging -y
                fi

          - name: Check source for master
            if: github.base_ref == 'master'
            run: |
                if [[ "${{ github.head_ref }}" != "staging" ]]; then
                  echo "Only changes from the staging branch can be merged into master."
                  exit 1
                else
                  echo ${{ secrets.PROD }} | base64 --decode > prod.pem
                  dfx identity import --storage-mode=plaintext prod prod.pem
                  dfx identity use prod
                  dfx deploy --network ic c-y
                fi
